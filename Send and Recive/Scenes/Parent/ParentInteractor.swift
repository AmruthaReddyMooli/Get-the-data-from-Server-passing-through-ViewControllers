//
//  ParentInteractor.swift
//  Send and Recive
//
//  Created by Bhargavi on 20/06/19.
//  Copyright (c) 2019 Amrutha. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ParentBusinessLogic
{
  func doSomething(request: Parent.Something.Request)
  func tellChild(request: Parent.TellChild.Request)
}

protocol ParentDataStore
{
  var name: String { get set }
}

class ParentInteractor: ParentBusinessLogic, ParentDataStore
{
    
    var name: String = ""
    
  var presenter: ParentPresentationLogic?
  var worker: ParentWorker?
  //var name: String = ""
  
  // MARK: Do something
  func tellChild(request: Parent.TellChild.Request) {
        worker?.doSomeWork()

     if worker?.appData?.title != nil{
        name = (worker?.appData!.title)!
     }
    
        let response = Parent.TellChild.Response()
    presenter?.presentTellChild(response: response)
        
    }
    
  func doSomething(request: Parent.Something.Request)
  {
   worker = ParentWorker()
   worker?.doSomeWork()
   
   let response = Parent.Something.Response(name: name)
   presenter?.presentSomething(response: response)
  }
    
 
    
}
