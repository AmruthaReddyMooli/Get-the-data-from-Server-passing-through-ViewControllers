//
//  ChildInteractor.swift
//  Send and Recive
//
//  Created by Bhargavi on 20/06/19.
//  Copyright (c) 2019 Amrutha. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ChildBusinessLogic
{
  func doSomething(request: Child.Something.Request)
    func tellParent(request: Child.TellParent.Request)
}

protocol ChildDataStore
{
  var name: String { get set }
}

class ChildInteractor: ChildBusinessLogic, ChildDataStore
{
   
    
  var presenter: ChildPresentationLogic?
  var worker: ChildWorker?
  var name: String = ""
  
  // MARK: Do something
  
  func doSomething(request: Child.Something.Request)
  {
    worker = ChildWorker()
    worker?.doSomeWork()
    
    let response = Child.Something.Response(title: name)
    presenter?.presentSomething(response: response)
  }
  func tellParent(request: Child.TellParent.Request) {
     name = request.name
     let response = Child.TellParent.Response()
     presenter?.presentTellParent(response: response)
    }
}
